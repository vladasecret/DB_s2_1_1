@model DB_s2_1_1.ViewModel.Trains.TrainsIndex

@{
    ViewData["Title"] = "Trains";
}

<h1>Trains</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by route id:
            <input asp-for="TrainsFilters.SearchRoute" type="number" min="1" />
            <datalist id="routes">
                @foreach (var item in Model.RouteIdList)
                {
                    <option value="@item" />
                }
            </datalist>
        </p>
    </div>
    <div class="form-actions no-color">
        <p>
            Find by category:
            <select asp-for="TrainsFilters.SearchCategory" asp-items="Model.Categories">
                <option value=0></option>
            </select>
        </p>
    </div>
    <div class="form-actions no-color">
        <p>
            Find by min seats: <input type="number" asp-for="TrainsFilters.SearchSeats" min="1" />
        </p>
        <button type="submit" value="Search" class="btn btn-link">Search</button> |
        <a asp-action="Index">Back to Full List</a>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Train id
            </th>
            <th>
                Route id
            </th>
            <th>
                Quantity of seats
            </th>
            <th>
                Category
            </th>
            <th>
                Station
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PagedTrains.Results)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RouteId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SeatsQty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Station)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <input asp-for="TrainsFilters.SearchRoute" type="hidden" />
        <input asp-for="TrainsFilters.SearchCategory" type="hidden" />
        <input asp-for="TrainsFilters.SearchSeats" type="hidden" />

        @for (int i = Math.Max(Model.PagedTrains.CurrentPage - 4, 1); i < Model.PagedTrains.CurrentPage; ++i)
        {
            <button class="btn btn-primary" type="submit" name="Page" value="@i">@i</button>
        }
        <button class="btn btn-primary" type="submit" name="Page" value="@Model.PagedTrains.CurrentPage" disabled>@Model.PagedTrains.CurrentPage</button>
        @for (int i = Model.PagedTrains.CurrentPage + 1; i <= Math.Min(Model.PagedTrains.CurrentPage + 4, Model.PagedTrains.PageCount); ++i)
        {
            <button class="btn btn-primary" type="submit" name="Page" value="@i">@i</button>
        }        
    </div>
</form>
